#!/usr/bin/env ruby

puts '           |  test  | memory'
puts '-----------|--------|--------'

Dir.chdir(File.dirname(__FILE__))

exitcode = true
dir = 'fixtures'
Dir.entries(dir).sort.each do |item|
  next if item == '.' or item == '..'
  file = "#{dir}/#{item}"

  expect = []
  open(file).each do |line|
    case line[0]
    when 'i'
      expect << line[1..-1].to_i
    when 'd'
      expect.delete(line[1..-1].to_i)
    else
      break
    end
  end
  expect = expect.sort.join("\n")
  actual = `../bin < #{file} 2>/dev/null`.chomp
  test = expect == actual

  `valgrind -q --leak-check=yes --log-fd=1 --error-exitcode=1 ../bin < #{file}`
  mem = $?.success?

  def msg(bool)
    bool ? "\e[32m  OK  \e[0m" : "\e[31mFailed\e[0m"
  end

  puts '%10s | %6s | %6s' % [item, msg(test), msg(mem)]

  exitcode &&= test && mem

  next unless $?.success?
  next if expect == actual
  puts "  Expect: #{expect.inspect[0..65]}"
  puts "  Actual: #{actual.inspect[0..65]}"
  puts ''
end

exit exitcode
